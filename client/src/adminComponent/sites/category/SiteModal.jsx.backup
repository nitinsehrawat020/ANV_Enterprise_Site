import styled from "styled-components";
import { capitalizeFirstLetter } from "../../../util/helper";
import Heading from "../../../ui/Heading";
import CostMakingDetails from "./CostMakingDetails";
import UpdateDetails from "./UpdateDetails";
import { useState } from "react";
import SeeDetails from "./SeeDetails";

import { IoArrowBack } from "react-icons/io5";

const ModalContainer = styled.div`
  width: 95vw;
  max-width: 1200px;
  height: 90vh;
  max-height: 800px;
  display: grid;
  grid-template-columns: ${(props) => (props.seeDetails ? "1fr" : "1fr 1fr")};
  grid-template-rows: ${(props) =>
    props.seeDetails ? "auto 1fr" : "auto 1fr 1fr"};
  grid-template-areas: ${(props) =>
    props.seeDetails
      ? `"siteName siteName"
    "seeDetails seeDetails"`
      : `"siteName siteName"
    "inventory costMaking"
    "PaymentDetails updateDetails"`};
  grid-gap: 1.2rem;
  padding: 1.5rem;
  background: linear-gradient(135deg, var(--color-background-800), var(--color-background-700));
  border-radius: var(--br-xl);
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  backdrop-filter: blur(8px);
  border: 1px solid var(--color-background-600);
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, var(--color-primary-500), var(--color-primary-600), var(--color-primary-500));
  }

  /* Large Desktop (1440px+) */
  @media (min-width: 1440px) {
    width: 85vw;
    max-width: 1400px;
    height: 85vh;
    max-height: 900px;
    padding: 2rem;
    grid-gap: 1.5rem;
  }

  /* Desktop (1024px - 1439px) */
  @media (min-width: 1024px) and (max-width: 1439px) {
    width: 90vw;
    max-width: 1200px;
    height: 85vh;
    padding: 1.5rem;
    grid-gap: 1.2rem;
  }

  /* Tablet (768px - 1023px) */
  @media (min-width: 768px) and (max-width: 1023px) {
    width: 95vw;
    height: 90vh;
    padding: 1.2rem;
    grid-gap: 1rem;
    grid-template-columns: 1fr;
    grid-template-rows: ${(props) =>
      props.seeDetails ? "auto 1fr" : "auto repeat(4, minmax(180px, 1fr))"};
    grid-template-areas: ${(props) =>
      props.seeDetails
        ? `"siteName"
      "seeDetails"`
        : `"siteName"
      "inventory"
      "costMaking"
      "PaymentDetails"
      "updateDetails"`};
    overflow-y: auto;
  }

  /* Mobile (425px - 767px) */
  @media (min-width: 425px) and (max-width: 767px) {
    width: 95vw;
    height: 95vh;
    padding: 1rem;
    grid-gap: 0.8rem;
    grid-template-columns: 1fr;
    grid-template-rows: ${(props) =>
      props.seeDetails ? "auto 1fr" : "auto repeat(4, minmax(160px, 1fr))"};
    grid-template-areas: ${(props) =>
      props.seeDetails
        ? `"siteName"
      "seeDetails"`
        : `"siteName"
      "inventory"
      "costMaking"
      "PaymentDetails"
      "updateDetails"`};
    overflow-y: auto;
  }

  /* Small Mobile (â‰¤424px) */
  @media (max-width: 424px) {
    width: 98vw;
    height: 98vh;
    padding: 0.8rem;
    grid-gap: 0.6rem;
    grid-template-columns: 1fr;
    grid-template-rows: ${(props) =>
      props.seeDetails ? "auto 1fr" : "auto repeat(4, minmax(140px, 1fr))"};
    grid-template-areas: ${(props) =>
      props.seeDetails
        ? `"siteName"
      "seeDetails"`
        : `"siteName"
      "inventory"
      "costMaking"
      "PaymentDetails"
      "updateDetails"`};
    overflow-y: auto;
  }

  /* Landscape Mobile */
  @media (max-height: 600px) and (orientation: landscape) {
    height: 95vh;
    padding: 0.8rem;
    grid-gap: 0.6rem;
    overflow-y: auto;
  }
`;

const SiteName = styled.div`
  grid-area: siteName;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: linear-gradient(135deg, var(--color-background-600), var(--color-background-500));
  border-radius: var(--br-l);
  padding: 1rem 1.5rem;
  min-height: 60px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  border: 1px solid var(--color-background-400);
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, var(--color-primary-500), var(--color-primary-600));
  }

  h3 {
    margin: 0;
    color: var(--color-primary-600);
    font-size: 1.4rem;
    font-weight: 700;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    letter-spacing: 0.5px;
  }

  .button-group {
    display: flex;
    gap: 0.8rem;
    align-items: center;
  }

  /* Large Desktop */
  @media (min-width: 1440px) {
    padding: 1.2rem 2rem;
    min-height: 70px;
    
    h3 {
      font-size: 1.6rem;
    }
    
    .button-group {
      gap: 1rem;
    }
  }

  /* Desktop */
  @media (min-width: 1024px) and (max-width: 1439px) {
    padding: 1rem 1.5rem;
    min-height: 65px;
    
    h3 {
      font-size: 1.4rem;
    }
  }

  /* Tablet */
  @media (min-width: 768px) and (max-width: 1023px) {
    padding: 0.9rem 1.2rem;
    min-height: 55px;
    
    h3 {
      font-size: 1.2rem;
    }
    
    .button-group {
      gap: 0.6rem;
    }
  }

  /* Mobile */
  @media (max-width: 767px) {
    flex-direction: column;
    gap: 0.8rem;
    padding: 0.8rem 1rem;
    text-align: center;
    
    h3 {
      font-size: 1.1rem;
      order: 1;
    }
    
    .button-group {
      gap: 0.5rem;
      width: 100%;
      justify-content: space-between;
      order: 2;
    }
  }

  /* Small Mobile */
  @media (max-width: 424px) {
    padding: 0.6rem 0.8rem;
    gap: 0.6rem;
    
    h3 {
      font-size: 1rem;
    }
    
    .button-group {
      gap: 0.4rem;
      justify-content: center;
    }
  }
`;

const Inventory = styled.div`
  grid-area: inventory;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  flex-direction: column;
  gap: 1.2rem;
  padding: 1.5rem;
  overflow: auto;
  background: linear-gradient(135deg, var(--color-background-500), var(--color-background-400));
  border-radius: var(--br-l);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
  border: 1px solid var(--color-background-300);
  position: relative;
  transition: all 0.3s ease;

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 12px 35px rgba(0, 0, 0, 0.12);
  }

  &::before {
    content: 'ðŸ“¦';
    position: absolute;
    top: 1rem;
    right: 1rem;
    font-size: 1.2rem;
    opacity: 0.6;
  }

  h4 {
    margin: 0;
    color: var(--color-primary-700);
    font-size: 1.1rem;
    font-weight: 600;
    text-align: center;
    width: 100%;
    padding-bottom: 0.5rem;
    border-bottom: 2px solid var(--color-primary-200);
  }

  /* Large Desktop */
  @media (min-width: 1440px) {
    padding: 2rem;
    gap: 1.5rem;
    
    h4 {
      font-size: 1.3rem;
    }
    
    &::before {
      font-size: 1.4rem;
    }
  }

  /* Desktop */
  @media (min-width: 1024px) and (max-width: 1439px) {
    padding: 1.5rem;
    gap: 1.2rem;
    
    h4 {
      font-size: 1.1rem;
    }
  }

  /* Tablet */
  @media (min-width: 768px) and (max-width: 1023px) {
    padding: 1.2rem;
    gap: 1rem;
    min-height: 180px;
    
    h4 {
      font-size: 1rem;
    }
    
    &::before {
      font-size: 1rem;
    }
  }

  /* Mobile */
  @media (max-width: 767px) {
    padding: 1rem;
    gap: 0.8rem;
    min-height: 160px;
    
    h4 {
      font-size: 0.9rem;
    }
    
    &::before {
      font-size: 0.9rem;
      top: 0.8rem;
      right: 0.8rem;
    }
  }

  /* Small Mobile */
  @media (max-width: 424px) {
    padding: 0.8rem;
    gap: 0.6rem;
    min-height: 140px;
    
    h4 {
      font-size: 0.85rem;
    }
    
    &::before {
      font-size: 0.8rem;
    }
  }
`;

// Unused styled component - can be removed
// const DetailsContainer = styled.div`
  // grid-area: DetailsContainer;
  // display: flex;
  // align-items: center;
  // justify-content: flex-start;
  flex-direction: column;
  gap: 1.2rem;
  padding: 1.5rem;
  overflow: auto;
  background: linear-gradient(135deg, var(--color-background-500), var(--color-background-400));
  border-radius: var(--br-l);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
  border: 1px solid var(--color-background-300);
  position: relative;
  transition: all 0.3s ease;

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 12px 35px rgba(0, 0, 0, 0.12);
  }

  &::before {
    content: 'ï¿½';
    position: absolute;
    top: 1rem;
    right: 1rem;
    font-size: 1.2rem;
    opacity: 0.6;
  }

  h4 {
    margin: 0;
    color: var(--color-primary-700);
    font-size: 1.1rem;
    font-weight: 600;
    text-align: center;
    width: 100%;
    padding-bottom: 0.5rem;
    border-bottom: 2px solid var(--color-primary-200);
  }

  /* Large Desktop */
  @media (min-width: 1440px) {
    padding: 2rem;
    gap: 1.5rem;
    
    h4 {
      font-size: 1.3rem;
    }
    
    &::before {
      font-size: 1.4rem;
    }
  }

  /* Desktop */
  @media (min-width: 1024px) and (max-width: 1439px) {
    padding: 1.5rem;
    gap: 1.2rem;
    
    h4 {
      font-size: 1.1rem;
    }
  }

  /* Tablet */
  @media (min-width: 768px) and (max-width: 1023px) {
    padding: 1.2rem;
    gap: 1rem;
    min-height: 180px;
    
    h4 {
      font-size: 1rem;
    }
    
    &::before {
      font-size: 1rem;
    }
  }

  /* Mobile */
  @media (max-width: 767px) {
    padding: 1rem;
    gap: 0.8rem;
    min-height: 160px;
    
    h4 {
      font-size: 0.9rem;
    }
    
    &::before {
      font-size: 0.9rem;
      top: 0.8rem;
      right: 0.8rem;
    }
  }

  /* Small Mobile */
  @media (max-width: 424px) {
    padding: 0.8rem;
    gap: 0.6rem;
    min-height: 140px;
    
    h4 {
      font-size: 0.85rem;
    }
    
    &::before {
      font-size: 0.8rem;
    }
  }
`;
export const TableContainer = styled.div`
  width: 100%;
  max-width: 100%;
  overflow: auto;
  border-radius: var(--br-m);
  background-color: var(--color-background-200);
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.06);
  
  &::-webkit-scrollbar {
    width: 6px;
    height: 6px;
  }
  
  &::-webkit-scrollbar-track {
    background: var(--color-background-300);
    border-radius: 3px;
  }
  
  &::-webkit-scrollbar-thumb {
    background: linear-gradient(45deg, var(--color-primary-500), var(--color-primary-600));
    border-radius: 3px;
    
    &:hover {
      background: linear-gradient(45deg, var(--color-primary-600), var(--color-primary-700));
    }
  }

  table {
    width: 100%;
    border-collapse: collapse;
    font-size: 0.85rem;
    background-color: transparent;
    
    th, td {
      padding: 0.8rem 0.6rem;
      text-align: left;
      border-bottom: 1px solid var(--color-background-300);
      vertical-align: middle;
    }
    
    th {
      background: linear-gradient(135deg, var(--color-primary-600), var(--color-primary-700));
      color: var(--color-white-500);
      font-weight: 600;
      font-size: 0.8rem;
      position: sticky;
      top: 0;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      border-bottom: 2px solid var(--color-primary-500);
    }
    
    td {
      color: var(--color-text-600);
      font-weight: 500;
      transition: all 0.2s ease;
    }
    
    tr {
      transition: all 0.2s ease;
      
      &:hover {
        background-color: var(--color-primary-50);
        transform: scale(1.01);
        td {
          color: var(--color-primary-800);
        }
      }
      
      &:nth-child(even) {
        background-color: var(--color-background-100);
      }
    }
  }

  /* Large Desktop */
  @media (min-width: 1440px) {
    table {
      font-size: 0.95rem;
      
      th, td {
        padding: 1rem 0.8rem;
      }
      
      th {
        font-size: 0.85rem;
      }
    }
  }

  /* Desktop */
  @media (min-width: 1024px) and (max-width: 1439px) {
    table {
      font-size: 0.85rem;
      
      th, td {
        padding: 0.8rem 0.6rem;
      }
      
      th {
        font-size: 0.8rem;
      }
    }
  }

  /* Tablet */
  @media (min-width: 768px) and (max-width: 1023px) {
    table {
      font-size: 0.75rem;
      
      th, td {
        padding: 0.6rem 0.4rem;
      }
      
      th {
        font-size: 0.7rem;
      }
    }
  }

  /* Mobile */
  @media (max-width: 767px) {
    table {
      font-size: 0.7rem;
      
      th, td {
        padding: 0.5rem 0.3rem;
        word-break: break-word;
      }
      
      th {
        font-size: 0.65rem;
      }
    }
  }

  /* Small Mobile */
  @media (max-width: 424px) {
    table {
      font-size: 0.65rem;
      
      th, td {
        padding: 0.4rem 0.2rem;
      }
      
      th {
        font-size: 0.6rem;
      }
    }
  }
`;

const PaymentDetails = styled.div`
  grid-area: PaymentDetails;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  flex-direction: column;
  gap: 1.2rem;
  padding: 1.5rem;
  overflow: auto;
  background: linear-gradient(135deg, var(--color-background-500), var(--color-background-400));
  border-radius: var(--br-l);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
  border: 1px solid var(--color-background-300);
  position: relative;
  transition: all 0.3s ease;

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 12px 35px rgba(0, 0, 0, 0.12);
  }

  &::before {
    content: 'ðŸ’°';
    position: absolute;
    top: 1rem;
    right: 1rem;
    font-size: 1.2rem;
    opacity: 0.6;
  }

  h4 {
    margin: 0;
    color: var(--color-primary-700);
    font-size: 1.1rem;
    font-weight: 600;
    text-align: center;
    width: 100%;
    padding-bottom: 0.5rem;
    border-bottom: 2px solid var(--color-primary-200);
  }

  /* Large Desktop */
  @media (min-width: 1440px) {
    padding: 2rem;
    gap: 1.5rem;
    
    h4 {
      font-size: 1.3rem;
    }
    
    &::before {
      font-size: 1.4rem;
    }
  }

  /* Desktop */
  @media (min-width: 1024px) and (max-width: 1439px) {
    padding: 1.5rem;
    gap: 1.2rem;
    
    h4 {
      font-size: 1.1rem;
    }
  }

  /* Tablet */
  @media (min-width: 768px) and (max-width: 1023px) {
    padding: 1.2rem;
    gap: 1rem;
    min-height: 180px;
    
    h4 {
      font-size: 1rem;
    }
    
    &::before {
      font-size: 1rem;
    }
  }

  /* Mobile */
  @media (max-width: 767px) {
    padding: 1rem;
    gap: 0.8rem;
    min-height: 160px;
    
    h4 {
      font-size: 0.9rem;
    }
    
    &::before {
      font-size: 0.9rem;
      top: 0.8rem;
      right: 0.8rem;
    }
  }

  /* Small Mobile */
  @media (max-width: 424px) {
    padding: 0.8rem;
    gap: 0.6rem;
    min-height: 140px;
    
    h4 {
      font-size: 0.85rem;
    }
    
    &::before {
      font-size: 0.8rem;
    }
  }
`;
const SeeDetailsButton = styled.div`
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  padding: 0.5rem;
  background-color: var(--color-background-500);
  border: 2px solid var(--color-background-200);
  border-radius: var(--br-l);
  cursor: pointer;
  &:hover {
    background-color: var(--color-background-800);
    border: 2px solid var(--color-background-500);
  }
`;

const CloseButton = styled.div`
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.5rem;
  background-color: var(--color-red-500);
  border: 2px solid var(--color-red-300);
  border-radius: var(--br-l);
  cursor: pointer;
  color: white;
  font-size: 30px;

  &:hover {
    background-color: var(--color-red-600);
    border: 2px solid var(--color-red-400);
  }
`;

function SiteModal({ site, onClose }) {
  const [seeDetails, setSeeDetails] = useState(false);

  return (
    <ModalContainer seeDetails={seeDetails}>
      <SiteName>
        <CloseButton onClick={onClose}>
          <IoArrowBack />
        </CloseButton>{" "}
        <Heading as="h3">{capitalizeFirstLetter(site.name)}</Heading>
        <div style={{ display: "flex", gap: "0.5rem" }}>
          <SeeDetailsButton onClick={() => setSeeDetails((value) => !value)}>
            {seeDetails ? "Hide Details" : "See Details"}
          </SeeDetailsButton>
        </div>
      </SiteName>
      {seeDetails ? (
        <SeeDetails site={site} />
      ) : (
        <>
          <Inventory>
            <Heading as="h4">Inventory</Heading>
            <TableContainer>
              <table key={`inventory-${site._id}`}>
                <thead>
                  <tr>
                    <th>Item Name</th>
                    <th>Quantity</th>
                  </tr>
                </thead>
                <tbody>
                  {site.inventory.map((item) => (
                    <tr key={item._id}>
                      <td>{item.name}</td>
                      <td>{item.quantity}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </TableContainer>
          </Inventory>
          <CostMakingDetails site={site} />

          <PaymentDetails>
            <Heading as="h4">Payment Details</Heading>
            <TableContainer>
              <table>
                <thead>
                  <tr>
                    <th>Date</th>
                    <th>Amount</th>
                    <th>Mode</th>
                    <th>Reciver</th>
                  </tr>
                </thead>
                <tbody>
                  {site.paymentLog.map((payment, index) => (
                    <tr key={index}>
                      <td>{new Date(payment.date).toLocaleDateString()}</td>
                      <td>{payment.amount}</td>
                      <td>{payment.mode}</td>
                      <td>{payment.receiver}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </TableContainer>
          </PaymentDetails>
          <UpdateDetails site={site} />
        </>
      )}
    </ModalContainer>
  );
}

export default SiteModal;
